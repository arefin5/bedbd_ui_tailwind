name: CI/CD for Next.js with Docker

on:
  push:
    branches:
      - main

env:
  ACTIONS_STEP_DEBUG: true
  DOCKER_IMAGE: ${{ vars.DOCKERHUB_USERNAME }}/nextjs-app:latest

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21.7.1'

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        run: npm run build

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }} .
          docker push ${{ env.DOCKER_IMAGE }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ vars.SERVER_IP }}
          username: root  # Replace with the appropriate user if not root
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          script: |
            echo "Starting deployment on the server..."

            # Troubleshooting steps - Restart Docker and ensure iptables is set correctly
            sudo systemctl restart docker
            echo 'Setting iptables configuration for Docker...'
            echo '{"iptables": true}' | sudo tee /etc/docker/daemon.json
            sudo systemctl restart docker

            # Pull the latest image
            IMAGE_TAG="${{ env.DOCKER_IMAGE }}"
            echo "Pulling Docker image with tag: $IMAGE_TAG"
            docker pull $IMAGE_TAG

            # Stop and remove any existing container
            docker stop nextjs_app || true
            docker rm nextjs_app || true

            # Run the container with troubleshooting steps
            docker run -d --name nextjs_app -p ${{ vars.SERVER_PORT }}:3000 $IMAGE_TAG
